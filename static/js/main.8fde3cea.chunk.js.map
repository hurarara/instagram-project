{"version":3,"sources":["assets/instagram_logo.png","api.js","constant.js","utils/useLocalStorage.js","store.js","components/comment.js","components/commentList.js","components/post.js","components/postList.js","components/layout.js","components/storyList.js","components/suggestion.js","components/suggestionList.js","pages/home.js","pages/about.js","pages/accounts/profile.js","utils/forms.js","pages/accounts/login.js","pages/accounts/signUp.js","utils/loginRequiredRoute.js","pages/accounts/index.js","utils/base64.js","components/postNewForm.js","pages/postNew.js","pages/index.js","index.js"],"names":["module","exports","axiosInstance","Axios","create","baseURL","process","useAxios","makeUseAxios","axios","getStorageItem","key","initialValue","item","window","localStorage","getItem","JSON","parse","error","console","log","setStorageItem","value","setItem","stringify","AppContext","createContext","reducer","prevState","action","type","SET_TOKEN","jwtToken","payload","newState","isAuthenticated","UpdateWithSideEffect","state","dispatch","DELETE_TOKEN","AppProvider","children","useReducerWithSideEffects","length","store","Provider","useAppContext","useContext","setToken","token","Comment","comment","author","username","name","avatar_url","message","created_at","displayName","avatar","src","alt","content","datetime","title","moment","format","fromNow","CommentList","post","useState","commentContent","setCommentContent","headers","Authorization","url","id","commentList","data","refetch","loading","handleCommentSave","a","map","TextArea","style","marginBottom","onChange","e","target","block","disabled","onClick","Post","handleLike","caption","location","photo","is_like","tag_set","hoverable","cover","actions","HeartTwoTone","twoToneColor","isLike","HeartOutlined","Meta","size","icon","description","PostList","postList","setPostList","originPostList","useEffect","apiUrl","method","response","prevList","currentPost","Layout","sidebar","className","LogoImage","width","Search","mode","Item","StoryList","Suggestion","suggestionUser","onFollowUser","is_follow","SuggestionList","origUserList","userList","setUserList","user","config","then","reponse","prevUserList","catch","Home","history","useHistory","push","About","Profile","parseErrorMessages","fieldsErrorMessages","Object","entries","reduce","acc","fieldName","errors","validateStatus","help","join","Login","useLocation","fieldErrors","setFieldErrors","loginRedirectUrl","from","pathname","tailLayout","wrapperCol","offset","span","labelCol","onFinish","values","password","notification","open","SmileOutlined","color","FrownOutlined","fn","label","rules","required","min","hasFeedback","non_field_errors","Password","htmlType","SignUp","LoginRequiredRoute","Component","component","kwargs","render","props","to","Routes","match","exact","path","SignUP","getBase64FromFile","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","PostNewForm","fileList","setFileList","visible","base64","previewPhoto","setPreviewPhoto","handleFinish","fieldValues","formData","FormData","append","forEach","originFileObj","status","fieldsErrorMessage","handlePreviewPhoto","preview","listType","beforeUpload","onPreview","PlusOutlined","footer","onCancel","PostNew","Root","AccountRoutes","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8fde3cea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/instagram_logo.dcc389e5.png\";","import Axios from \"axios\";\r\nimport { makeUseAxios } from \"axios-hooks\";\r\nimport { API_HOST } from \"constant\";\r\n\r\nexport const axiosInstance = Axios.create({\r\n  baseURL: API_HOST\r\n});\r\n\r\nexport const useAxios = makeUseAxios({\r\n  axios: axiosInstance\r\n});\r\n","export const API_HOST =\r\n  process.env.REACT_APP_API_HOST || \"http://localhost:8000\";\r\n","// https://usehooks.com/useLocalStorage/\r\n\r\nimport { useState } from \"react\";\r\n\r\nexport function getStorageItem(key, initialValue) {\r\n  try {\r\n    // Get from local storage by key\r\n    const item = window.localStorage.getItem(key);\r\n    // Parse stored json or if none return initialValue\r\n    return item ? JSON.parse(item) : initialValue;\r\n  } catch (error) {\r\n    // If error also return initialValue\r\n    console.log(error);\r\n    return initialValue;\r\n  }\r\n}\r\nexport function setStorageItem(key, value) {\r\n  try {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n// Hook\r\nexport default function useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    return getStorageItem(key, initialValue);\r\n    // try {\r\n    //   // Get from local storage by key\r\n    //   const item = window.localStorage.getItem(key);\r\n    //   // Parse stored json or if none return initialValue\r\n    //   return item ? JSON.parse(item) : initialValue;\r\n    // } catch (error) {\r\n    //   // If error also return initialValue\r\n    //   console.log(error);\r\n    //   return initialValue;\r\n    // }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = value => {\r\n    const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n    // Save key\r\n    setStoredValue(valueToStore);\r\n    setStorageItem(key, valueToStore);\r\n    // Save to local storage\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      //   window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n","import React, { createContext, useContext } from \"react\";\r\n// import useLocalStorage from \"utils/useLocalStorage\";\r\nimport { getStorageItem, setStorageItem } from \"utils/useLocalStorage\";\r\n// https://www.npmjs.com/package/use-reducer-with-side-effects\r\nimport useReducerWithSideEffects, {\r\n  UpdateWithSideEffect,\r\n  Update\r\n} from \"use-reducer-with-side-effects\";\r\n\r\nconst initialState = {\r\n  jwtToken: \"\"\r\n};\r\n\r\nconst AppContext = createContext();\r\n\r\nconst reducer = (prevState, action) => {\r\n  const { type } = action;\r\n\r\n  if (type === SET_TOKEN) {\r\n    const { payload: jwtToken } = action;\r\n    const newState = {\r\n      ...prevState,\r\n      jwtToken,\r\n      isAuthenticated: true\r\n    };\r\n    // http 통신이나 파일저장이 필요하면 UpdateWithSideEffect 사용\r\n    return UpdateWithSideEffect(newState, (state, dispatch) => {\r\n      setStorageItem(\"jwtToken\", jwtToken);\r\n    });\r\n  } else if (type === DELETE_TOKEN) {\r\n    const newState = {\r\n      ...prevState,\r\n      jwtToken: \"\",\r\n      isAuthenticated: false\r\n    };\r\n    return UpdateWithSideEffect(newState, (state, dispatch) => {\r\n      setStorageItem(\"jwtToken\", \"\");\r\n    });\r\n  }\r\n  //TODO...\r\n  return prevState;\r\n};\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const jwtToken = getStorageItem(\"jwtToken\", \"\");\r\n  const [store, dispatch] = useReducerWithSideEffects(reducer, {\r\n    jwtToken,\r\n    isAuthenticated: jwtToken.length > 0\r\n  });\r\n  return (\r\n    <AppContext.Provider value={{ store, dispatch }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n\r\n// Actions\r\nconst SET_TOKEN = \"APP/SET_TOKEN\";\r\nconst DELETE_TOKEN = \"APP/DELETE_TOKEN\";\r\n\r\n// Action Creator\r\nexport const setToken = token => ({ type: SET_TOKEN, payload: token });\r\nexport const deleteToken = () => ({ type: DELETE_TOKEN });\r\n","import React from \"react\";\r\nimport { Comment as AntComment, Avatar, Tooltip } from \"antd\";\r\nimport moment from \"moment\";\r\n\r\nconst Comment = ({ comment }) => {\r\n  const {\r\n    author: { username, name, avatar_url },\r\n    message,\r\n    created_at\r\n  } = comment;\r\n\r\n  const displayName = name.length === 0 ? username : name;\r\n  return (\r\n    <AntComment\r\n      author={displayName}\r\n      avatar={<Avatar src={avatar_url} alt={displayName} />}\r\n      content={<p>{message}</p>}\r\n      datetime={\r\n        <Tooltip title={moment().format(created_at)}>\r\n          <span>{moment(created_at).fromNow()}</span>\r\n        </Tooltip>\r\n      }\r\n    ></AntComment>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","import React, { useState } from \"react\";\r\nimport { Input, Button } from \"antd\";\r\nimport useAxios from \"axios-hooks\";\r\nimport Axios from \"axios\";\r\nimport { useAppContext } from \"store\";\r\nimport Comment from \"./comment\";\r\n\r\nconst CommentList = ({ post }) => {\r\n  const {\r\n    store: { jwtToken },\r\n    dispatch\r\n  } = useAppContext();\r\n\r\n  const [commentContent, setCommentContent] = useState(\"\");\r\n\r\n  const headers = { Authorization: `JWT ${jwtToken}` };\r\n  const [{ data: commentList, loading, error }, refetch] = useAxios({\r\n    url: `http://localhost:8000/api/posts/${post.id}/comments/`,\r\n    headers\r\n  });\r\n\r\n  const handleCommentSave = async () => {\r\n    try {\r\n      const response = await Axios.post(\r\n        `http://localhost:8000/api/posts/${post.id}/comments/`,\r\n        { message: commentContent },\r\n        { headers }\r\n      );\r\n      setCommentContent(\"\");\r\n      refetch();\r\n    } catch (error) {\r\n      console.log(\"error:::\" + error);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {commentList &&\r\n        commentList.map(comment => {\r\n          return <Comment key={comment.id} comment={comment} />;\r\n        })}\r\n      <Input.TextArea\r\n        style={{ marginBottom: \"0.5em\" }}\r\n        value={commentContent}\r\n        onChange={e => setCommentContent(e.target.value)}\r\n      />\r\n      <Button\r\n        block\r\n        type=\"primary\"\r\n        disabled={commentContent.length === 0}\r\n        onClick={handleCommentSave}\r\n      >\r\n        댓글쓰기\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","import React from \"react\";\r\nimport { Card, Avatar } from \"antd\";\r\nimport { HeartOutlined, HeartFilled, HeartTwoTone } from \"@ant-design/icons\";\r\nimport CommentList from \"./commentList\";\r\n\r\nconst Post = ({ post, handleLike }) => {\r\n  const { author, caption, location, photo, tag_set, is_like } = post;\r\n  const { username, name, avatar_url } = author;\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        hoverable\r\n        cover={<img src={photo} alt={caption} />}\r\n        // FIXME: host지점을 로직으로 처리\r\n        actions={[\r\n          is_like ? (\r\n            <HeartTwoTone\r\n              twoToneColor=\"red\"\r\n              onClick={() => handleLike({ post, isLike: false })}\r\n            />\r\n          ) : (\r\n            <HeartOutlined onClick={() => handleLike({ post, isLike: true })} />\r\n          )\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={\r\n            <Avatar\r\n              size=\"large\"\r\n              icon={<img src={avatar_url} alt={username} />}\r\n            />\r\n          }\r\n          title={location}\r\n          description={caption}\r\n          style={{ marginBottom: \"0.5em\" }}\r\n        />\r\n        <CommentList post={post} />\r\n      </Card>\r\n      {/* <img src={photo} alrt={caption} style={{ width: \"100px\" }} />\r\n      {caption}, {location} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Alert } from \"antd\";\r\n// import Axios from \"axios\";\r\n// import useAxios from \"axios-hooks\";\r\nimport { axiosInstance, useAxios } from \"api\";\r\nimport Post from \"./post\";\r\nimport { useAppContext } from \"store\";\r\n\r\nconst PostList = () => {\r\n  // store에서 로그인시 받아오는 jwtToken, dispatch를 사용할 수 있음.\r\n  const {\r\n    store: { jwtToken },\r\n    dispatch\r\n  } = useAppContext();\r\n\r\n  const [postList, setPostList] = useState([]);\r\n\r\n  const apiUrl = \"/api/posts/\";\r\n  const headers = { Authorization: `JWT ${jwtToken}` };\r\n  const [{ data: originPostList, loading, error }, refetch] = useAxios({\r\n    url: apiUrl,\r\n    headers\r\n  });\r\n\r\n  useEffect(() => {\r\n    setPostList(originPostList);\r\n  }, [originPostList]);\r\n\r\n  const handleLike = async ({ post, isLike }) => {\r\n    const apiUrl = `/api/posts/${post.id}/like/`;\r\n    const method = isLike ? \"POST\" : \"DELETE\";\r\n\r\n    try {\r\n      const response = await axiosInstance({\r\n        url: apiUrl,\r\n        method,\r\n        headers\r\n      });\r\n      console.log(\"response:::\" + response);\r\n\r\n      setPostList(prevList => {\r\n        return prevList.map(currentPost =>\r\n          currentPost === post\r\n            ? { ...currentPost, is_like: isLike }\r\n            : currentPost\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error:::\" + error);\r\n    }\r\n  };\r\n  // const [postList, setPostList] = useState([]);\r\n  // useEffect(() => {\r\n  // const headers = { Authorization: `JWT ${jwtToken}` };\r\n  // Axios.get(apiUrl, { headers })\r\n  //   .then(response => {\r\n  //     const { data } = response;\r\n  //     console.log(response);\r\n  //     setPostList(data);\r\n  //   })\r\n  //   .catch(error => {\r\n  //     console.log(error);\r\n  //   });\r\n  // console.log(\"mounted\");\r\n  // }, []);\r\n\r\n  return (\r\n    <div>\r\n      {!postList && <Alert type=\"warning\" message=\"포스팅이 없습니다.\" />}\r\n      {postList &&\r\n        postList.map(post => (\r\n          <Post key={post.id} post={post} handleLike={handleLike} />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import React from \"react\";\r\nimport { Input, Menu } from \"antd\";\r\nimport \"./layout.scss\";\r\nimport LogoImage from \"assets/instagram_logo.png\";\r\n\r\nconst Layout = ({ children, sidebar, ...props }) => {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"header\">\r\n        <h1 className=\"page-title\">\r\n          <img src={LogoImage} alt=\"logo\" style={{ width: \"100px\" }} />\r\n        </h1>\r\n        <div className=\"search\">\r\n          <Input.Search />\r\n        </div>\r\n        <div className=\"topnav\">\r\n          <Menu mode=\"horizontal\">\r\n            <Menu.Item>메뉴1</Menu.Item>\r\n            <Menu.Item>메뉴2</Menu.Item>\r\n            <Menu.Item>메뉴3</Menu.Item>\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar\">{sidebar}</div>\r\n      <div className=\"contents\">{children}</div>\r\n      <div className=\"footer\">&copy; 2020. Han Won Seok</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Card } from \"antd\";\r\nimport \"./storyList.scss\";\r\n\r\nconst StoryList = ({ style }) => {\r\n  return (\r\n    <div style={style}>\r\n      <Card title=\"Stories\" size=\"small\">\r\n        Stories from people you follow will show up here.\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoryList;\r\n","import React from \"react\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { Button, Avatar } from \"antd\";\r\nimport \"./suggestion.scss\";\r\n\r\nconst Suggestion = ({ suggestionUser, onFollowUser }) => {\r\n  const { username, name, avatar_url, is_follow } = suggestionUser;\r\n  return (\r\n    <div className=\"suggestion\">\r\n      <div className=\"avatar\">\r\n        <Avatar\r\n          size=\"small\"\r\n          icon={<img src={avatar_url} alt={`${username}'s avatar`} />}\r\n        />\r\n      </div>\r\n      <div className=\"username\">{name.length === 0 ? username : name}</div>\r\n      <div className=\"action\">\r\n        {is_follow && \"팔로잉 중\"}\r\n        {!is_follow && (\r\n          <Button size=\"small\" onClick={() => onFollowUser(username)}>\r\n            Follow\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Suggestion;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport \"./suggestionList.scss\";\r\nimport { Card } from \"antd\";\r\nimport Suggestion from \"./suggestion\";\r\n// import Axios from \"axios\";\r\n// import useAxios from \"axios-hooks\";\r\nimport { axiosInstance, useAxios } from \"api\";\r\nimport { useAppContext } from \"store\";\r\n\r\nconst SuggestionList = ({ style }) => {\r\n  // const [userList, setUserList] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   async function fetchUserList() {\r\n  //     const apiUrl = \"http://localhost:8000/accounts/suggestions/\";\r\n  //     const headers = { Authorization: `JWT ${jwtToken}` };\r\n  //     try {\r\n  //       const { data } = await Axios.get(apiUrl, { headers });\r\n  //       setUserList(data);\r\n  //     } catch (error) {\r\n  //       console.error(error);\r\n  //     }\r\n  //   }\r\n  //   fetchUserList();\r\n  // }, []);\r\n\r\n  const {\r\n    store: { jwtToken }\r\n  } = useAppContext();\r\n  const headers = { Authorization: `JWT ${jwtToken}` };\r\n  const [{ data: origUserList, loading, error }, refetch] = useAxios({\r\n    url: \"/accounts/suggestions/\",\r\n    headers\r\n  });\r\n\r\n  const [userList, setUserList] = useState([]);\r\n  useEffect(() => {\r\n    if (!origUserList) {\r\n      setUserList([]);\r\n    } else {\r\n      setUserList(origUserList.map(user => ({ ...user, is_follow: false })));\r\n    }\r\n  }, [origUserList]);\r\n\r\n  const onFollowUser = username => {\r\n    const data = { username };\r\n    const config = { headers };\r\n    axiosInstance\r\n      .post(\"/accounts/follow/\", data, config)\r\n      .then(reponse => {\r\n        setUserList(prevUserList => {\r\n          return prevUserList.map(user => {\r\n            if (user.username === username) {\r\n              return { ...user, is_follow: true };\r\n            } else {\r\n              return user;\r\n            }\r\n          });\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  };\r\n  return (\r\n    <div style={style}>\r\n      {loading && <div>Loading ... </div>}\r\n      {error && <div>로딩 중에 에러가 발생했습니다.</div>}\r\n      <button onClick={() => refetch()}>Reload</button>\r\n      <Card title=\"Suggestions for you\" size=\"small\">\r\n        {userList.map(suggestionUser => (\r\n          <Suggestion\r\n            key={suggestionUser.username}\r\n            suggestionUser={suggestionUser}\r\n            onFollowUser={onFollowUser}\r\n          />\r\n        ))}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuggestionList;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PostList from \"components/postList\";\r\nimport Layout from \"components/layout\";\r\nimport StoryList from \"components/storyList\";\r\nimport SuggestionList from \"components/suggestionList\";\r\nimport { Button } from \"antd\";\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n  const handleClick = () => {\r\n    history.push(\"/posts/new\");\r\n  };\r\n  const sidebar = (\r\n    <>\r\n      <Button\r\n        type=\"primary\"\r\n        block\r\n        style={{ marginBottom: \"1rem\" }}\r\n        onClick={handleClick}\r\n      >\r\n        새 포스팅 쓰기\r\n      </Button>\r\n      <StoryList style={{ marginBottom: \"1rem\" }} />\r\n      <SuggestionList></SuggestionList>\r\n    </>\r\n  );\r\n  return (\r\n    <Layout sidebar={sidebar}>\r\n      <PostList />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return <div>About</div>;\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Profile = () => {\r\n  return <div>accounts/profile</div>;\r\n};\r\n\r\nexport default Profile;\r\n","const parseErrorMessages = fieldsErrorMessages => {\r\n  return Object.entries(fieldsErrorMessages).reduce(\r\n    (acc, [fieldName, errors]) => {\r\n      //   errors : [\"m1\", \"m2\"].join(\" \") => \"m1 m2\"\r\n      acc[fieldName] = {\r\n        validateStatus: \"error\",\r\n        help: errors.join(\" \")\r\n      };\r\n\r\n      return acc;\r\n    },\r\n    {}\r\n  );\r\n};\r\n\r\nexport default parseErrorMessages;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Alert, Form, Input, Button, notification, Card } from \"antd\";\r\nimport { SmileOutlined, FrownOutlined } from \"@ant-design/icons\";\r\n// import Axios from \"axios\";\r\nimport { axiosInstance } from \"api\";\r\nimport useLocalStorage from \"utils/useLocalStorage\";\r\nimport parseErrorMessages from \"utils/forms\";\r\nimport { useAppContext } from \"store\";\r\nimport { setToken } from \"store\";\r\n\r\nconst Login = () => {\r\n  const { dispatch } = useAppContext();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  // const [jwtToken, setJwtToken] = useLocalStorage(\"jwtToken\", \"\");\r\n  const [fieldErrors, setFieldErrors] = useState({});\r\n\r\n  const { from: loginRedirectUrl } = location.state || {\r\n    from: { pathname: \"/\" }\r\n  };\r\n\r\n  // Ant Design에서의 onFinish가 onSubmit의 역할을 한다.\r\n  const onFinish = values => {\r\n    // async, await : async로 선언된 함수에서 코드가 나열된 순서대로 수행된다.\r\n    async function fn() {\r\n      const { username, password } = values;\r\n\r\n      setFieldErrors({});\r\n\r\n      const data = { username, password };\r\n      try {\r\n        const response = await axiosInstance.post(\"/accounts/token/\", data);\r\n        // const { data: token } = response; // => const token = response.data;와 같은 의미\r\n        // const {\r\n        //   data: { token }\r\n        // } = response; // => const token = response.data.token;와 같은 의미\r\n        const {\r\n          data: { token: jwtToken }\r\n        } = response;\r\n        // setJwtToken(jwtToken);\r\n        dispatch(setToken(jwtToken));\r\n\r\n        notification.open({\r\n          message: \"로그인 성공\",\r\n          description: \"Home으로 이동합니다.\",\r\n          icon: <SmileOutlined style={{ color: \"#108ee0\" }} />\r\n        });\r\n\r\n        // 성공 후 이동경로\r\n        history.push(loginRedirectUrl);\r\n      } catch (error) {\r\n        if (error.response) {\r\n          notification.open({\r\n            message: \"로그인 실패\",\r\n            description: \"아이디/암호를 확인해주세요.\",\r\n            icon: <FrownOutlined style={{ color: \"#ff3333\" }} />\r\n          });\r\n          const { data: fieldsErrorMessages } = error.response;\r\n          //   fieldsErrorMessages => {username: [\"m1\", \"m2\"], password: [\"p1\", \"p2\"]}\r\n\r\n          setFieldErrors(parseErrorMessages(fieldsErrorMessages));\r\n        }\r\n      }\r\n    }\r\n    fn();\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8\r\n    },\r\n    wrapperCol: {\r\n      span: 16\r\n    }\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 8,\r\n      span: 16\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card title=\"로그인\">\r\n      <Form\r\n        {...layout}\r\n        onFinish={onFinish}\r\n        //   onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your username!\"\r\n            },\r\n            { min: 5, message: \"5글자이상 입력해주세요.\" }\r\n          ]}\r\n          hasFeedback\r\n          {...fieldErrors.username}\r\n          {...fieldErrors.non_field_errors}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password!\"\r\n            }\r\n          ]}\r\n          {...fieldErrors.password}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Alert, Form, Input, Button, notification } from \"antd\";\r\nimport { SmileOutlined, FrownOutlined } from \"@ant-design/icons\";\r\n// import Axios from \"axios\";\r\nimport { axiosInstance } from \"api\";\r\n\r\n// const SignUp = () => {\r\n//   const history = useHistory();\r\n//   const [inputs, setInputs] = useState({ username: \"\", password: \"\" });\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [errors, setErrors] = useState({});\r\n//   const [formDisabled, setFormDisabled] = useState(true);\r\n//   //   const [username, setUsername] = useState(\"\");\r\n//   //   const [password, setPassword] = useState(\"\");\r\n\r\n//   const onSubmit = e => {\r\n//     e.preventDefault();\r\n\r\n//     setLoading(true);\r\n//     setErrors({});\r\n\r\n//     Axios.post(\"http://localhost:8000/accounts/signup/\", inputs)\r\n//       .then(response => {\r\n//         console.log(response);\r\n//         history.push(\"/accounts/login\");\r\n//       })\r\n//       .catch(error => {\r\n//         console.log(error);\r\n//         if (error.response) {\r\n//           setErrors({\r\n//             username: error.response.data.username || [].join(\" \"),\r\n//             password: error.response.data.password || [].join(\" \")\r\n//           });\r\n//           //   console.log(\"error.response : \" + error.response);\r\n//         }\r\n//       })\r\n//       .finally(() => {\r\n//         setLoading(false);\r\n//       });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const isEnabled = Object.values(inputs).every(s => s.length > 0);\r\n//     // const isDisabled =\r\n//     //   inputs.username.length === 0 || inputs.password.length === 0;\r\n//     setFormDisabled(!isEnabled);\r\n//   }, [inputs]);\r\n\r\n//   const onChange = e => {\r\n//     const { name, value } = e.target;\r\n//     setInputs(prev => ({\r\n//       ...prev,\r\n//       [name]: value\r\n//     }));\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={onSubmit}>\r\n//         <div>\r\n//           <input type=\"text\" name=\"username\" onChange={onChange} />\r\n//           {errors.username && <Alert type=\"error\" message={errors.username} />}\r\n//         </div>\r\n//         <div>\r\n//           <input type=\"password\" name=\"password\" onChange={onChange} />\r\n//           {errors.password && <Alert type=\"error\" message={errors.password} />}\r\n//         </div>\r\n\r\n//         <input\r\n//           type=\"submit\"\r\n//           value=\"회원가입\"\r\n//           disabled={loading || formDisabled}\r\n//         />\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst SignUp = () => {\r\n  const history = useHistory();\r\n  const [fieldErrors, setFieldErrors] = useState({});\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8\r\n    },\r\n    wrapperCol: {\r\n      span: 16\r\n    }\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 8,\r\n      span: 16\r\n    }\r\n  };\r\n\r\n  // Ant Design에서의 onFinish가 onSubmit의 역할을 한다.\r\n  const onFinish = values => {\r\n    // async, await : async로 선언된 함수에서 코드가 나열된 순서대로 수행된다.\r\n    async function fn() {\r\n      const { username, password } = values;\r\n\r\n      setFieldErrors({});\r\n\r\n      const data = { username, password };\r\n      try {\r\n        await axiosInstance.post(\"/accounts/signup/\", data);\r\n\r\n        notification.open({\r\n          message: \"회원가입 성공\",\r\n          description: \"로그인 페이지로 이동합니다.\",\r\n          icon: <SmileOutlined style={{ color: \"#108ee0\" }} />\r\n        });\r\n\r\n        // 회원가입에 성공하면 로그인 페이지로 이동\r\n        history.push(\"/accounts/login\");\r\n      } catch (error) {\r\n        if (error.response) {\r\n          notification.open({\r\n            message: \"회원가입 실패\",\r\n            description: \"아이디/암호를 확인해주세요.\",\r\n            icon: <FrownOutlined style={{ color: \"#ff3333\" }} />\r\n          });\r\n          const { data: fieldsErrorMessages } = error.response; // fieldsErrorMessages = error.response.data와 같은 표현\r\n          //   fieldsErrorMessages => {username: [\"m1\", \"m2\"], password: [\"p1\", \"p2\"]}\r\n          setFieldErrors(\r\n            Object.entries(fieldsErrorMessages).reduce(\r\n              (acc, [fieldName, errors]) => {\r\n                //   errors : [\"m1\", \"m2\"].join(\" \") => \"m1 m2\"\r\n                acc[fieldName] = {\r\n                  validateStatus: \"error\",\r\n                  help: errors.join(\" \")\r\n                };\r\n\r\n                return acc;\r\n              },\r\n              {}\r\n            )\r\n          );\r\n        }\r\n      }\r\n    }\r\n    fn();\r\n  };\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      onFinish={onFinish}\r\n      //   onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        label=\"Username\"\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input your username!\"\r\n          },\r\n          { min: 5, message: \"5글자이상 입력해주세요.\" }\r\n        ]}\r\n        hasFeedback\r\n        {...fieldErrors.username}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input your password!\"\r\n          }\r\n        ]}\r\n        {...fieldErrors.password}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAppContext } from \"store\";\r\n\r\nconst LoginRequiredRoute = ({ component: Component, ...kwargs }) => {\r\n  const {\r\n    store: { isAuthenticated }\r\n  } = useAppContext();\r\n\r\n  console.log(\"isAuthenticated:::\" + isAuthenticated);\r\n\r\n  return (\r\n    <Route\r\n      {...kwargs}\r\n      render={props => {\r\n        if (isAuthenticated) {\r\n          return <Component {...props} />;\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/accounts/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoginRequiredRoute;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Profile from \"./profile\";\r\nimport Login from \"./login\";\r\nimport SignUP from \"./signUp\";\r\nimport LoginRequiredRoute from \"utils/loginRequiredRoute\";\r\n\r\nconst Routes = ({ match, ...props }) => {\r\n  return (\r\n    <>\r\n      <LoginRequiredRoute\r\n        exact\r\n        path={match.url + \"/profile\"}\r\n        component={Profile}\r\n      ></LoginRequiredRoute>\r\n      <Route exact path={match.url + \"/login\"} component={Login} />\r\n      <Route exact path={match.url + \"/signup\"} component={SignUP} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","const getBase64FromFile = file => {\r\n  // resolve : 정상적으로 처리되었을 때 호출\r\n  // reject : 에러상황일 때 호출\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n};\r\n\r\nexport default getBase64FromFile;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Input, Button, Upload, Modal, notification } from \"antd\";\r\nimport { PlusOutlined, FrownOutlined } from \"@ant-design/icons\";\r\nimport getBase64FromFile from \"utils/base64\";\r\nimport parseErrorMessages from \"utils/forms\";\r\n// import Axios from \"axios\";\r\nimport { axiosInstance, useAxios } from \"api\";\r\nimport { useAppContext } from \"store\";\r\n\r\nconst PostNewForm = () => {\r\n  const {\r\n    store: { jwtToken }\r\n  } = useAppContext();\r\n\r\n  const history = useHistory();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n  const [previewPhoto, setPreviewPhoto] = useState({\r\n    visible: false,\r\n    base64: null\r\n  });\r\n  const [fieldErrors, setFieldErrors] = useState({});\r\n  const handleFinish = async fieldValues => {\r\n    console.log(\"fielValues:::\" + fieldValues);\r\n    const {\r\n      caption,\r\n      location,\r\n      photo: { fileList }\r\n    } = fieldValues;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"caption\", caption);\r\n    formData.append(\"location\", location);\r\n\r\n    // file이 여러개일 수도 있음\r\n    fileList.forEach(file => {\r\n      formData.append(\"photo\", file.originFileObj);\r\n    });\r\n\r\n    const headers = { Authorization: `JWT ${jwtToken}` };\r\n    try {\r\n      const response = await axiosInstance.post(\"/api/posts/\", formData, {\r\n        headers\r\n      });\r\n      console.log(\"success response:::\" + response);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      if (error.response) {\r\n        const { status, data: fieldsErrorMessage } = error.response;\r\n        if (typeof fieldsErrorMessage === \"string\") {\r\n          notification.open({\r\n            message: \"서버 오류\",\r\n            description: `에러) ${status} 응답을 받았습니다.`,\r\n            icon: <FrownOutlined style={{ color: \"#ff3333\" }} />\r\n          });\r\n        } else {\r\n          setFieldErrors(parseErrorMessages(fieldsErrorMessage));\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleUploadChange = ({ fileList }) => {\r\n    setFileList(fileList);\r\n  };\r\n  const handlePreviewPhoto = async file => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64FromFile(file.originFileObj);\r\n    }\r\n\r\n    setPreviewPhoto({\r\n      visible: true,\r\n      base64: file.url || file.preview\r\n    });\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8\r\n    },\r\n    wrapperCol: {\r\n      span: 16\r\n    }\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      offset: 8,\r\n      span: 16\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      onFinish={handleFinish}\r\n      //   onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        label=\"Caption\"\r\n        name=\"caption\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Caption을 입력해주세요.\"\r\n          }\r\n        ]}\r\n        hasFeedback\r\n        {...fieldErrors.caption}\r\n        {...fieldErrors.non_field_errors}\r\n      >\r\n        <Input.TextArea />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Location\"\r\n        name=\"location\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Location 입력해주세요.\"\r\n          }\r\n        ]}\r\n        hasFeedback\r\n        {...fieldErrors.location}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Photo\"\r\n        name=\"photo\"\r\n        rules={[{ required: true, message: \"사진을 입력해주세요.\" }]}\r\n        hasFeedback\r\n        {...fieldErrors.photo}\r\n      >\r\n        <Upload\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          beforeUpload={() => {\r\n            return false;\r\n          }}\r\n          onChange={handleUploadChange}\r\n          onPreview={handlePreviewPhoto}\r\n        >\r\n          {/* 사진을 1개만 넣기위한 조건 */}\r\n          {fileList.length > 0 ? null : (\r\n            <div>\r\n              <PlusOutlined />\r\n              <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n          )}\r\n        </Upload>\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n      <Modal\r\n        visible={previewPhoto.visible}\r\n        footer={null}\r\n        onCancel={() => setPreviewPhoto({ visible: false })}\r\n      >\r\n        <img\r\n          src={previewPhoto.base64}\r\n          style={{ width: \"100%\" }}\r\n          alt=\"Preview\"\r\n        />\r\n      </Modal>\r\n      <hr />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostNewForm;\r\n","import React from \"react\";\r\nimport { Card } from \"antd\";\r\nimport PostNewForm from \"components/postNewForm\";\r\nimport \"./postNew.scss\";\r\n\r\nconst PostNew = () => {\r\n  return (\r\n    <div className=\"PostNew\">\r\n      <Card title=\"새 포스팅 쓰기\">\r\n        <PostNewForm />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostNew;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n// import Layout from \"components/layout\";\r\nimport Home from \"./home\";\r\nimport About from \"./about\";\r\nimport AccountRoutes from \"./accounts\";\r\nimport LoginRequiredRoute from \"utils/loginRequiredRoute\";\r\nimport PostNew from \"./postNew\";\r\n\r\nconst Root = () => {\r\n  return (\r\n    <>\r\n      {/* Route를 통해 해당 URL 경로를 가지는 페이지화 할 수 있다. */}\r\n      <LoginRequiredRoute exact={true} path=\"/\" component={Home} />\r\n      <Route exact path=\"/about\" component={About} />\r\n      <LoginRequiredRoute exact path=\"/posts/new\" component={PostNew} />\r\n      <Route path=\"/accounts\" component={AccountRoutes} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport Root from \"pages\";\nimport { AppProvider } from \"store\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <AppProvider>\n      <Root />\n    </AppProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}